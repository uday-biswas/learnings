//learning about infrastructure as code - terraform
//if we want to use aws , azure, or any other cloud provider, we have to migrate our code 
to that cloud provider , but using terraform we can use the same code for any cloud provider.

-> terraform is used to manage, track any infrastructure, automate changes, standardize configuration, collaborate on infrastructure, and more.
-> there are four main commands in terraform
    1. terraform init - initializes the terraform project
    2. terraform plan - shows the changes that will be made to the infrastructure
    3. terraform apply - applies the changes to the infrastructure
    4. terraform destroy - destroys the infrastructure

example terraform code for creating a ec2 instance in aws:
terraform {
    required_providers {
        aws = {
            source = "hashicorp/aws"
            version = "~> 4.6"
        }
    }

    required_version = ">= 1.2.0"
}

provider "aws" {
    region = "us-east-1c"
}

resource "aws_instance" "app_server" {
    ami = "ami-0c7217cdde317cfec"
    instance_type = "t2.micro"

    tags = {
        Name = "terraform-example"
    }
}

-> save the above code in a file with .tf extension
-> run the command terraform init, then terraform plan and then terraform apply.
-> terraform apply will ask for confirmation, type yes and hit enter.
-> the above code will create a ec2 instance in aws.

-> terraform stores the state of the infrastructure in a file called terraform.tfstate, which is created after terraform apply command is run.
-> terraform.tfstate file contains the details of the infrastructure that is created.
-> terraform.tfstate file is used by terraform to know what changes to make to the infrastructure, and we should not modify this file manually.
